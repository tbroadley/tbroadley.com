{"version":3,"sources":["components/Change/Change.js","components/Chunk/Chunk.js","components/File/File.js","components/App/App.js","registerServiceWorker.js","index.js","move.svg"],"names":["type","ln2","ln","content","className","slice","baseKey","changes","map","ln1","key","DragHandle","SortableHandle","src","move","alt","File","SortableElement","index","fileDescription","from","to","chunks","React","useState","description","setDescription","value","onChange","d","oldStart","newStart","props","BANNED_FILES","includes","Diff","SortableContainer","diff","chunkIndex","href","title","PasteDiff","state","event","setState","target","this","onClick","setDiff","Component","App","onSortEnd","oldIndex","newIndex","arrayMove","parsedDiff","parseDiff","flattenedDiff","flatMap","chunk","useDragHandle","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","catch","error","ReactDOM","render","document","getElementById","URL","process","origin","addEventListener","fetch","response","status","headers","get","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker","module","exports"],"mappings":"qWAGe,G,cAAA,gBAAGA,EAAH,EAAGA,KAAMC,EAAT,EAASA,IAAKC,EAAd,EAAcA,GAAIC,EAAlB,EAAkBA,QAAlB,OACb,yBAAKC,UAAS,iBAAqB,QAATJ,EAAiB,gBAAkB,GAA/C,YAA8D,QAATA,EAAiB,kBAAoB,KACtG,yBAAKI,UAAU,gCACH,QAATJ,EAAiB,IAAM,GACd,QAATA,EAAiB,IAAM,IAE1B,yBAAKI,UAAU,uBACH,WAATJ,EAAoBC,EAAMC,GAE7B,yBAAKE,UAAU,mBACZD,EAAQE,MAAM,OCTN,G,OAAA,gBAAGC,EAAH,EAAGA,QAASH,EAAZ,EAAYA,QAASI,EAArB,EAAqBA,QAArB,OACb,yBAAKH,UAAU,SACb,uBAAGA,UAAU,kBACVD,GAGDI,EAAQC,KAAI,YAML,IALLR,EAKI,EALJA,KACAS,EAII,EAJJA,IACAR,EAGI,EAHJA,IACAC,EAEI,EAFJA,GACAC,EACI,EADJA,QAEMO,EAAG,UAAMJ,EAAN,YAAiBN,EAAjB,YAAkC,WAATA,EAAA,UAAuBS,EAAvB,YAA8BR,GAAQC,GACxE,OACE,kBAAC,EAAD,eACEQ,IAAKA,EACLJ,QAASI,GACL,CAAEV,OAAMS,MAAKR,MAAKC,KAAIC,mB,0BCdhCQ,EAAaC,0BAAe,kBAAM,yBAAKR,UAAU,oBAAoBS,IAAKC,IAAMC,IAAI,+BAEpFC,EAAOC,2BAAgB,YAAiC,EAA9BC,MAA+B,IAKzDC,EALiCC,EAAuB,EAAvBA,KAAMC,EAAiB,EAAjBA,GAAIC,EAAa,EAAbA,OAAa,EACtBC,IAAMC,SAAS,IADO,mBACrDC,EADqD,KACxCC,EADwC,KAoC5D,OA5BEP,EADEC,IAASC,EAET,uBAAGjB,UAAU,qBACX,0BAAMA,UAAU,cAAcgB,IAPnB,cAUNA,EAEP,uBAAGhB,UAAU,qBAAb,QACO,0BAAMA,UAAU,cAAciB,GADrC,YAZa,cAgBNA,EAEP,uBAAGjB,UAAU,qBAAb,QACO,0BAAMA,UAAU,cAAcgB,GADrC,YAMA,uBAAGhB,UAAU,qBAAb,OAEE,0BAAMA,UAAU,mBAAmBgB,GAFrC,aAIE,0BAAMhB,UAAU,iBAAiBiB,IAMrC,yBAAKjB,UAAU,QACb,kBAACO,EAAD,MACA,yBAAKP,UAAU,mBACb,kBAAC,IAAD,CACEuB,MAAOF,EACPG,SAAU,SAACC,GAAD,OAAOH,EAAiBG,OAGrCV,EA1CY,cA4CXE,EAAkB,KAAOC,EAAOd,KAAI,YAK7B,IAJLsB,EAII,EAJJA,SACAC,EAGI,EAHJA,SACA5B,EAEI,EAFJA,QACAI,EACI,EADJA,QAEMG,EAAG,UAAMU,EAAN,YAAcC,EAAd,YAAoBS,EAApB,YAAgCC,GACzC,OACE,kBAAC,EAAD,CACErB,IAAKA,EACLJ,QAASI,EACTP,QAASA,EACTI,QAASA,WASR,WAACyB,GACd,IAAMC,EAAe,CAAC,oBAAqB,aAE3C,OAAIA,EAAaC,SAASF,EAAMZ,OAASa,EAAaC,SAASF,EAAMX,IAC5D,KAGF,kBAAC,EAASW,IC9EbG,G,OAAOC,6BAAkB,oBAAGC,YAAH,MAAU,GAAV,SAC7B,yBAAKjC,UAAU,OAEXiC,EAAK7B,KAAI,WAKNU,GALM,IACPE,EADO,EACPA,KACAC,EAFO,EAEPA,GACAC,EAHO,EAGPA,OACAgB,EAJO,EAIPA,WAJO,OAMP,kBAAC,EAAD,eACE5B,IAAG,UAAKU,EAAL,YAAaC,EAAb,YAAmBiB,GACtBhC,QAAO,UAAKc,EAAL,YAAaC,EAAb,YAAmBiB,IACtB,CAAEpB,QAAOE,OAAMC,KAAIC,eAI7B,4CAAiB,uBAAGiB,KAAK,2CAA2CC,MAAM,WAAzD,iBAIfC,E,4MACJC,MAAQ,CAAEL,KAAM,I,EAEhBT,SAAW,SAACe,GACV,EAAKC,SAAS,CAAEP,KAAMM,EAAME,OAAOlB,S,uDAG3B,IAAD,OACP,OACE,yBAAKvB,UAAU,OACb,mDACA,2BACE,8BAAUuB,MAAOmB,KAAKJ,MAAML,KAAMT,SAAUkB,KAAKlB,YAEnD,4BAAQmB,QAAS,kBAAM,EAAKf,MAAMgB,QAAQ,EAAKN,MAAML,QAArD,uB,GAdgBY,aAmDTC,E,4MA7BbR,MAAQ,G,EAERS,UAAY,YAA6B,IAA1BC,EAAyB,EAAzBA,SAAUC,EAAe,EAAfA,SACvB,EAAKT,SAAS,CACZP,KAAMiB,oBAAU,EAAKZ,MAAML,KAAMe,EAAUC,M,EAI/CL,QAAU,SAACX,GACT,IAAMkB,EAAaC,IAAUnB,GACvBoB,EAAgBC,IAAQH,GAAY,YAA2B,IAAxBnC,EAAuB,EAAvBA,KAAMC,EAAiB,EAAjBA,GACjD,OADkE,EAAbC,OACvCd,KAAI,SAACmD,EAAOrB,GAAR,MAAwB,CAAElB,OAAMC,KAAIC,OAAQ,CAACqC,GAAQrB,oBAEzE,EAAKM,SAAS,CAAEP,KAAMoB,K,uDAGd,IACApB,EAASS,KAAKJ,MAAdL,KAER,OAAKA,EAKH,kBAACF,EAAD,CAAME,KAAMA,EAAMc,UAAWL,KAAKK,UAAWS,eAAa,IAJnD,kBAAC,EAAD,CAAWZ,QAASF,KAAKE,c,GArBpBC,aCtCZY,EAAcC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DA6BN,SAASC,EAAgBC,GACvBC,UAAUC,cACPC,SAASH,GACTI,MAAK,SAAAC,GACJA,EAAaC,cAAgB,WAC3B,IAAMC,EAAmBF,EAAaG,WACtCD,EAAiBE,cAAgB,WACA,cAA3BF,EAAiBjC,QACf2B,UAAUC,cAAcQ,WAK1BC,QAAQC,IAAI,6CAKZD,QAAQC,IAAI,4CAMrBC,OAAM,SAAAC,GACLH,QAAQG,MAAM,4CAA6CA,MChEjEC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,SDclC,WACb,GAA6C,kBAAmBjB,UAAW,CAGzE,GADkB,IAAIkB,IAAIC,kBAAwBzB,OAAOC,UAC3CyB,SAAW1B,OAAOC,SAASyB,OAIvC,OAGF1B,OAAO2B,iBAAiB,QAAQ,WAC9B,IAAMtB,EAAK,UAAMoB,kBAAN,sBAEP3B,EAwCV,SAAiCO,GAE/BuB,MAAMvB,GACHI,MAAK,SAAAoB,GAGkB,MAApBA,EAASC,SACuD,IAAhED,EAASE,QAAQC,IAAI,gBAAgBC,QAAQ,cAG7C3B,UAAUC,cAAc2B,MAAMzB,MAAK,SAAAC,GACjCA,EAAayB,aAAa1B,MAAK,WAC7BT,OAAOC,SAASmC,eAKpBhC,EAAgBC,MAGnBa,OAAM,WACLF,QAAQC,IACN,oEA5DAoB,CAAwBhC,GAGxBD,EAAgBC,OChCxBiC,I,mBCPAC,EAAOC,QAAU,IAA0B,kC","file":"static/js/main.f8b9a3db.chunk.js","sourcesContent":["import React from 'react';\nimport './Change.css'\n\nexport default ({ type, ln2, ln, content }) => (\n  <div className={`change ${type === 'add' ? 'change--added' : ''} ${type === 'del' ? 'change--deleted' : ''}`}>\n    <div className='change__addition-or-deletion'>\n      {type === 'add' ? '+' : ''}\n      {type === 'del' ? '-' : ''}\n    </div>\n    <div className='change__line-number'>\n      {type === 'normal' ? ln2 : ln}\n    </div>\n    <div className='change__content'>\n      {content.slice(1)}\n    </div>\n  </div>\n)\n","import React from 'react';\nimport Change from '../Change/Change';\nimport './Chunk.css';\n\nexport default ({ baseKey, content, changes }) => (\n  <div className='chunk'>\n    <p className='chunk__content'>\n      {content}\n    </p>\n    {\n      changes.map(({\n        type,\n        ln1,\n        ln2,\n        ln,\n        content,\n      }) => {\n        const key = `${baseKey}-${type}-${type === 'normal' ? `${ln1}-${ln2}` : ln}`;\n        return (\n          <Change\n            key={key}\n            baseKey={key}\n            {...{ type, ln1, ln2, ln, content }}\n          />\n        );\n      })\n    }\n  </div>\n);\n","import React from 'react';\nimport ReactQuill from 'react-quill';\nimport 'react-quill/dist/quill.snow.css';\nimport { SortableElement, SortableHandle } from 'react-sortable-hoc';\nimport Chunk from '../Chunk/Chunk';\nimport './File.css';\nimport move from '../../move.svg';\n\nconst DragHandle = SortableHandle(() => <img className=\"file__drag-handle\" src={move} alt=\"Drag and drop this file\" />)\n\nconst File = SortableElement(({ index, from, to, chunks }) => {\n  const [description, setDescription] = React.useState('');\n\n  const DEV_NULL = '/dev/null';\n\n  let fileDescription;\n\n  if (from === to) {\n    fileDescription = (\n      <p className='file__description'>\n        <span className='file__name'>{from}</span>\n      </p>\n    );\n  } else if (from === DEV_NULL) {\n    fileDescription = (\n      <p className='file__description'>\n        File <span className='file__name'>{to}</span> created\n      </p>\n    );\n  } else if (to === DEV_NULL) {\n    fileDescription = (\n      <p className='file__description'>\n        File <span className='file__name'>{from}</span> deleted\n      </p>\n    );\n  } else {\n    fileDescription = (\n      <p className='file__description'>\n        File\n        <span className='file__from-name'>{from}</span>\n        renamed to\n        <span className='file__to-name'>{to}</span>\n      </p>\n    );\n  }\n\n  return (\n    <div className='file'>\n      <DragHandle />\n      <div className='file__user-text'>\n        <ReactQuill\n          value={description}\n          onChange={(d) => setDescription ( d )}\n        />\n      </div>\n      {fileDescription}\n      {\n        to === DEV_NULL ? null : chunks.map(({\n          oldStart,\n          newStart,\n          content,\n          changes,\n        }) => {\n          const key = `${from}-${to}-${oldStart}-${newStart}`;\n          return (\n            <Chunk\n              key={key}\n              baseKey={key}\n              content={content}\n              changes={changes}\n            />\n          );\n        })\n      }\n    </div>\n  );\n});\n\nexport default (props) => {\n  const BANNED_FILES = ['package-lock.json', 'yarn.lock'];\n\n  if (BANNED_FILES.includes(props.from) || BANNED_FILES.includes(props.to)) {\n    return null;\n  }\n\n  return <File {...props} />;\n}\n","import flatMap from 'lodash/flatMap';\nimport parseDiff from 'parse-diff';\nimport React, { Component } from 'react';\nimport { SortableContainer, arrayMove } from 'react-sortable-hoc';\nimport File from '../File/File';\nimport './App.css';\n\nconst Diff = SortableContainer(({ diff = [] }) => (\n  <div className='app'>\n    {\n      diff.map(({\n        from,\n        to,\n        chunks,\n        chunkIndex\n      }, index) => (\n        <File\n          key={`${from}-${to}-${chunkIndex}`}\n          baseKey={`${from}-${to}-${chunkIndex}`}\n          {...{ index, from, to, chunks }}\n        />\n      ))\n    }\n    <p>Icons made by <a href=\"https://www.flaticon.com/authors/freepik\" title=\"Freepik\">Freepik</a></p>\n  </div>\n));\n\nclass PasteDiff extends Component {\n  state = { diff: \"\" };\n\n  onChange = (event) => {\n    this.setState({ diff: event.target.value })\n  }\n\n  render() {\n    return (\n      <div className='app'>\n        <p>Paste in a Git diff:</p>\n        <p>\n          <textarea value={this.state.diff} onChange={this.onChange} />\n        </p>\n        <button onClick={() => this.props.setDiff(this.state.diff)}>Lit that diff!</button>\n      </div>\n    )\n  }\n}\n\n\nclass App extends Component {\n  state = {};\n\n  onSortEnd = ({ oldIndex, newIndex }) => {\n    this.setState({\n      diff: arrayMove(this.state.diff, oldIndex, newIndex),\n    });\n  };\n\n  setDiff = (diff) => {\n    const parsedDiff = parseDiff(diff);\n    const flattenedDiff = flatMap(parsedDiff, ({ from, to, chunks }) => {\n      return chunks.map((chunk, chunkIndex) => ({ from, to, chunks: [chunk], chunkIndex }));\n    })\n    this.setState({ diff: flattenedDiff });\n  }\n\n  render() {\n    const { diff } = this.state;\n\n    if (!diff) {\n      return <PasteDiff setDiff={this.setDiff} />\n    }\n\n    return (\n      <Diff diff={diff} onSortEnd={this.onSortEnd} useDragHandle />\n    );\n  }\n}\n\nexport default App;\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App/App';\nimport registerServiceWorker from './registerServiceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\nregisterServiceWorker();\n","module.exports = __webpack_public_path__ + \"static/media/move.e49f23b6.svg\";"],"sourceRoot":""}